name: Builid Wheel and Release

on:
  pull_request:
  workflow_dispatch:
    inputs:
      upload_dest:
        type: choice
        description: Upload wheels to
        options:
          - No Upload
          - PyPI
          - Test PyPI
  push:
    branches:
      - master
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: read

jobs:
  build-artifacts:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # v6.0.0
        with:
          python-version: "3.9"
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine
      - name: Build wheel and sdist
        run: python -m build
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: releases
          path: dist
          if-no-files-found: error
      - name: Check with twine
        run: python -m twine check --strict dist/*

  upload-to-test-pypi:
    needs: build-artifacts
    runs-on: ubuntu-latest
    if: github.repository == 'pytoolz/toolz' && (startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' && github.event.inputs.upload_dest == 'Test PyPI')

    environment:
      name: test-pypi
      url: https://test.pypi.org/p/toolz
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
        with:
          name: releases
          path: dist
      - name: Publish to Test-PyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e  # v1.13.0
        with:
          repository-url: https://test.pypi.org/legacy/
          print-hash: true
          verbose: true

  upload-to-pypi:
    needs: build-artifacts
    runs-on: ubuntu-latest
    if: github.repository == 'pytoolz/toolz' && startsWith(github.ref, 'refs/tags/') && (github.event_name != 'workflow_dispatch' || github.event.inputs.upload_dest == 'PyPI')

    environment:
      name: pypi
      url: https://pypi.org/p/toolz
    permissions:
      id-token: write
      attestations: write

    steps:
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
        with:
          name: releases
          path: dist

      - name: Generate artifact attestation for sdist and wheel
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a  # v3.0.0
        with:
          subject-path: "dist/toolz-*"

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e  # v1.13.0
        with:
          attestations: true
          print-hash: true
          verbose: true
